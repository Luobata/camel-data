{"version":3,"file":"camel.esm.js","sources":["../src/help.ts","../src/transform.ts","../src/camel.ts"],"sourcesContent":["/**\n * @description type help\n */\n// tslint:disable no-any no-unsafe-any\n\nexport function isString(obj: any): obj is string {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isArray(obj: any): obj is any[] {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nexport function isObject(obj: any): obj is object {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n","/**\n * @description data transform to camel\n */\n\nexport default (input: string): string => {\n    return input.replace(/[-_\\.][^-_\\.]/g, (match: string) => {\n        return match.charAt(1).toUpperCase();\n    });\n};\n","/**\n * @description canel\n */\nimport { isArray, isObject, isString } from '@/help';\nimport { allCamel, camel, ICamel, IConf } from '@/interface';\nimport trans from '@/transform';\n\n// tslint:disable no-any no-unsafe-any\n\nconst camelTrans: Function = (input: camel, conf?: IConf): camel => {\n    const config: IConf = {\n        array: 'never',\n    };\n\n    if (conf) {\n        Object.assign(config, conf);\n    }\n    if (isArray(input)) {\n        // type ICamel[]\n        return input.map(\n            (v: allCamel): allCamel => {\n                return <allCamel>camelTrans(v, conf);\n            },\n        );\n        // } else if (isCamel(input)) {\n    } else if (isObject(input)) {\n        // typ ICamel\n        const result: ICamel = {};\n        const keys: string[] = Object.keys(input);\n        for (const i of keys) {\n            // 增加逻辑，如果i的对应存在则跳过并保留\n            const camelKey: string = trans(i);\n            if (input[camelKey] !== undefined) {\n                result[i] = input[i];\n            } else if (isObject(input[i])) {\n                result[<string>camelTrans(i, conf)] = camelTrans(\n                    input[i],\n                    conf,\n                );\n            } else if (isArray(input[i])) {\n                // default not to trans Array in object key\n                // as it may just be a value\n                if (config.array === 'never') {\n                    result[<string>camelTrans(i, conf)] = input[i];\n                } else if (config.array === 'always') {\n                    result[<string>camelTrans(i, conf)] = camelTrans(\n                        input[i],\n                        conf,\n                    );\n                } else if (config.array === 'object') {\n                    const arr: any[] = [];\n                    for (\n                        let j: number = 0;\n                        j < (<any[]>input[i]).length;\n                        j = j + 1\n                    ) {\n                        if (isObject((<any[]>input[i])[j])) {\n                            arr[j] = camelTrans((<any[]>input[i])[j], conf);\n                        } else {\n                            arr[j] = (<any[]>input[i])[j];\n                        }\n                    }\n                    result[<string>camelTrans(i, conf)] = arr;\n                }\n            } else {\n                result[<string>camelTrans(i, conf)] = input[i];\n            }\n        }\n\n        return result;\n    } else if (isString(input)) {\n        // string\n        return trans(input);\n    } else {\n        return input;\n    }\n};\n\n// camelTrans.config = {};\n\nexport default camelTrans;\n"],"names":["obj","Object","prototype","toString","call","input","replace","match","charAt","toUpperCase","camelTrans","conf","config","assign","isArray","map","v","isObject","result","keys","i","camelKey","trans","undefined","array","arr","j","length","isString"],"mappings":"AAAA;;;;AAKA,kBAAyBA;WACdC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,iBAA/C;;AAGJ,iBAAwBA;WACbC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,gBAA/C;;AAGJ,kBAAyBA;WACdC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,iBAA/C;;;ACdJ;;;AAIA,aAAe,UAACK,KAAD;WACJA,MAAMC,OAAN,CAAc,gBAAd,EAAgC,UAACC,KAAD;eAC5BA,MAAMC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,EAAP;KADG,CAAP;CADJ;;ACJA;;;AAGA,AAIA;AAEA,IAAMC,aAAuB,SAAvBA,UAAuB,CAACL,KAAD,EAAeM,IAAf;QACnBC,SAAgB;eACX;KADX;QAIID,IAAJ,EAAU;eACCE,MAAP,CAAcD,MAAd,EAAsBD,IAAtB;;QAEAG,QAAQT,KAAR,CAAJ,EAAoB;;eAETA,MAAMU,GAAN,CACH,UAACC,CAAD;mBACqBN,WAAWM,CAAX,EAAcL,IAAd,CAAjB;SAFD,CAAP;;KAFJ,MAQO,IAAIM,SAASZ,KAAT,CAAJ,EAAqB;;YAElBa,SAAiB,EAAvB;YACMC,OAAiBlB,OAAOkB,IAAP,CAAYd,KAAZ,CAAvB;;;;;;iCACgBc,IAAhB,8HAAsB;oBAAXC,CAAW;;;oBAEZC,WAAmBC,MAAMF,CAAN,CAAzB;oBACIf,MAAMgB,QAAN,MAAoBE,SAAxB,EAAmC;2BACxBH,CAAP,IAAYf,MAAMe,CAAN,CAAZ;iBADJ,MAEO,IAAIH,SAASZ,MAAMe,CAAN,CAAT,CAAJ,EAAwB;2BACZV,WAAWU,CAAX,EAAcT,IAAd,CAAf,IAAsCD,WAClCL,MAAMe,CAAN,CADkC,EAElCT,IAFkC,CAAtC;iBADG,MAKA,IAAIG,QAAQT,MAAMe,CAAN,CAAR,CAAJ,EAAuB;;;wBAGtBR,OAAOY,KAAP,KAAiB,OAArB,EAA8B;+BACXd,WAAWU,CAAX,EAAcT,IAAd,CAAf,IAAsCN,MAAMe,CAAN,CAAtC;qBADJ,MAEO,IAAIR,OAAOY,KAAP,KAAiB,QAArB,EAA+B;+BACnBd,WAAWU,CAAX,EAAcT,IAAd,CAAf,IAAsCD,WAClCL,MAAMe,CAAN,CADkC,EAElCT,IAFkC,CAAtC;qBADG,MAKA,IAAIC,OAAOY,KAAP,KAAiB,QAArB,EAA+B;4BAC5BC,MAAa,EAAnB;6BAEI,IAAIC,IAAY,CADpB,EAEIA,IAAYrB,MAAMe,CAAN,EAAUO,MAF1B,EAGID,IAAIA,IAAI,CAHZ,EAIE;gCACMT,SAAiBZ,MAAMe,CAAN,EAAUM,CAAV,CAAjB,CAAJ,EAAoC;oCAC5BA,CAAJ,IAAShB,WAAmBL,MAAMe,CAAN,EAAUM,CAAV,CAAnB,EAAiCf,IAAjC,CAAT;6BADJ,MAEO;oCACCe,CAAJ,IAAiBrB,MAAMe,CAAN,EAAUM,CAAV,CAAjB;;;+BAGOhB,WAAWU,CAAX,EAAcT,IAAd,CAAf,IAAsCc,GAAtC;;iBAvBD,MAyBA;2BACYf,WAAWU,CAAX,EAAcT,IAAd,CAAf,IAAsCN,MAAMe,CAAN,CAAtC;;;;;;;;;;;;;;;;;;eAIDF,MAAP;KA5CG,MA6CA,IAAIU,SAASvB,KAAT,CAAJ,EAAqB;;eAEjBiB,MAAMjB,KAAN,CAAP;KAFG,MAGA;eACIA,KAAP;;CAjER;;;;"}